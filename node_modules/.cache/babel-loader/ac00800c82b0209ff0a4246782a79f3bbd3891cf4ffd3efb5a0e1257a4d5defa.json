{"ast":null,"code":"var _jsxFileName = \"/Users/nemanjapopovic/Desktop/mewed/src/InterPageTransition.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport { useSpring, animated, useScroll, useInView } from '@react-spring/web';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterPageTransition() {\n  _s();\n  const {\n    scrollYProgress\n  } = useScroll({\n    container: containerRef,\n    onChange: ({\n      value: {\n        scrollYProgress\n      }\n    }) => {\n      if (scrollYProgress > 0.7) {\n        textApi.start({\n          y: '0'\n        });\n      } else {\n        textApi.start({\n          y: '100%'\n        });\n      }\n    },\n    default: {\n      immediate: true\n    }\n  });\n  const ref = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    div: true,\n    ref: ref,\n    children: \"Hello World\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(InterPageTransition, \"yoR97B/NtBX2tQjVUXXbzSenl5Q=\", false, function () {\n  return [useScroll];\n});\n_c = InterPageTransition;\n;\nexport default InterPageTransition;\nvar _c;\n$RefreshReg$(_c, \"InterPageTransition\");","map":{"version":3,"names":["React","ReactVisibilitySensor","useSpring","animated","useScroll","useInView","useEffect","useState","useRef","jsxDEV","_jsxDEV","InterPageTransition","_s","scrollYProgress","container","containerRef","onChange","value","textApi","start","y","default","immediate","ref","div","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nemanjapopovic/Desktop/mewed/src/InterPageTransition.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport { useSpring, animated, useScroll, useInView} from '@react-spring/web';\nimport { useEffect, useState, useRef } from 'react';\n\nfunction InterPageTransition() {\n    const { scrollYProgress } = useScroll({\n        container: containerRef,\n        onChange: ({ value: { scrollYProgress } }) => {\n          if (scrollYProgress > 0.7) {\n            textApi.start({ y: '0' })\n          } else {\n            textApi.start({ y: '100%' })\n          }\n        },\n        default: {\n          immediate: true,\n        },\n      })\n      const ref = useRef();\n    return (\n        <div div ref={ref}>\n            Hello World\n        </div>\n    )\n};\n\nexport default InterPageTransition;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,SAASC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,QAAO,mBAAmB;AAC5E,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAgB,CAAC,GAAGT,SAAS,CAAC;IAClCU,SAAS,EAAEC,YAAY;IACvBC,QAAQ,EAAEA,CAAC;MAAEC,KAAK,EAAE;QAAEJ;MAAgB;IAAE,CAAC,KAAK;MAC5C,IAAIA,eAAe,GAAG,GAAG,EAAE;QACzBK,OAAO,CAACC,KAAK,CAAC;UAAEC,CAAC,EAAE;QAAI,CAAC,CAAC;MAC3B,CAAC,MAAM;QACLF,OAAO,CAACC,KAAK,CAAC;UAAEC,CAAC,EAAE;QAAO,CAAC,CAAC;MAC9B;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,SAAS,EAAE;IACb;EACF,CAAC,CAAC;EACF,MAAMC,GAAG,GAAGf,MAAM,CAAC,CAAC;EACtB,oBACIE,OAAA;IAAKc,GAAG;IAACD,GAAG,EAAEA,GAAI;IAAAE,QAAA,EAAC;EAEnB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd;AAACjB,EAAA,CApBQD,mBAAmB;EAAA,QACIP,SAAS;AAAA;AAAA0B,EAAA,GADhCnB,mBAAmB;AAoB3B;AAED,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}