{"ast":null,"code":"var _jsxFileName = \"/Users/nemanjapopovic/Desktop/mewed/src/InterPageTransition.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport { useSpring, animated, useScroll, useInView } from '@react-spring/web';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterPageTransition() {\n  _s();\n  const boxRef = useRef();\n  const {\n    scrollYProgress\n  } = useScroll({\n    container: boxRef,\n    onChange: ({\n      value: {\n        scrollYProgress\n      }\n    }) => {\n      // Your scroll position change logic here\n      console.log('Scroll progress:', scrollYProgress);\n    },\n    default: {\n      immediate: true\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: boxRef,\n    style: {\n      width: '5%',\n      backgroundColor: 'green',\n      height: '100px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(InterPageTransition, \"DBmPfR6e2kzc4cwmhQ2Dlo9eBzI=\", false, function () {\n  return [useScroll];\n});\n_c = InterPageTransition;\n;\nexport default InterPageTransition;\nvar _c;\n$RefreshReg$(_c, \"InterPageTransition\");","map":{"version":3,"names":["React","ReactVisibilitySensor","useSpring","animated","useScroll","useInView","useEffect","useState","useRef","jsxDEV","_jsxDEV","InterPageTransition","_s","boxRef","scrollYProgress","container","onChange","value","console","log","default","immediate","ref","style","width","backgroundColor","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nemanjapopovic/Desktop/mewed/src/InterPageTransition.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nimport { useSpring, animated, useScroll, useInView} from '@react-spring/web';\nimport { useEffect, useState, useRef } from 'react';\n\nfunction InterPageTransition() {\n    const boxRef = useRef();\n    const { scrollYProgress } = useScroll({\n        container: boxRef,\n        onChange: ({ value: { scrollYProgress } }) => {\n          // Your scroll position change logic here\n          console.log('Scroll progress:', scrollYProgress);\n        },\n        default: {\n          immediate: true,\n        },\n      });\n      \n    return(\n        <div ref={boxRef}\n            style={{width: '5%', backgroundColor: 'green', height: '100px'}}\n        >\n            \n        </div>\n\n    );\n};\n\nexport default InterPageTransition;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,SAASC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,QAAO,mBAAmB;AAC5E,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAMC,MAAM,GAAGL,MAAM,CAAC,CAAC;EACvB,MAAM;IAAEM;EAAgB,CAAC,GAAGV,SAAS,CAAC;IAClCW,SAAS,EAAEF,MAAM;IACjBG,QAAQ,EAAEA,CAAC;MAAEC,KAAK,EAAE;QAAEH;MAAgB;IAAE,CAAC,KAAK;MAC5C;MACAI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,eAAe,CAAC;IAClD,CAAC;IACDM,OAAO,EAAE;MACPC,SAAS,EAAE;IACb;EACF,CAAC,CAAC;EAEJ,oBACIX,OAAA;IAAKY,GAAG,EAAET,MAAO;IACbU,KAAK,EAAE;MAACC,KAAK,EAAE,IAAI;MAAEC,eAAe,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG/D,CAAC;AAGd;AAAClB,EAAA,CArBQD,mBAAmB;EAAA,QAEIP,SAAS;AAAA;AAAA2B,EAAA,GAFhCpB,mBAAmB;AAqB3B;AAED,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}